class Solution {
public:
    bool checkValidGrid(vector<vector<int>>& grid) {
        int n = grid.size();
        int total = n * n;

        vector<pair<int,int>> pos(total);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                pos[grid[i][j]] = {i, j};
            }
        }

        if (pos[0] != make_pair(0,0)) return false;

        for (int k = 0; k < total - 1; k++) {
            int r1 = pos[k].first, c1 = pos[k].second;
            int r2 = pos[k+1].first, c2 = pos[k+1].second;
            int dr = abs(r1 - r2);
            int dc = abs(c1 - c2);

            if (!((dr == 2 && dc == 1) || (dr == 1 && dc == 2))) {
                return false;
            }
        }

        return true;
    }
};
